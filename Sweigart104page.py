def spam():  # Инструкцией def определить функцию с именем spam()
    eggs = 'spam local'  # Блок кода, следующий за инструкцией def образует тело функции.
    # Этот код выполняется при вызове функции, а не при ее первоначальном определении.
    # В программе существуют фактически три разные переменные с одним и тем же именем eggs,
    # что может сбивать с толку. Первая переменная eggs, которая существует в локальной области
    # видимости, когда вызывается функция spam().
    print(eggs)  # Вывести строку 'spam local'


def bacon():
    eggs = 'bacon local'  # Вторая из трех переменная eggs,которая существует в локальной области
    # видимости, когда вызывается функция bacon().
    print(eggs)  # Вывести строку 'bacon local'
    spam()  # А здесь что произойдет?
    print(eggs)  # Вывести строку 'bacon local'


eggs = 'global'  # Третья из трех перемененных eggs, которая существует в глобальной области
# видимости.
bacon()
print(eggs)  # выводится строка 'global'... Якобы. По факту получаю "Process finished
# with exit code 0", хотя Sweigart обещает на выводе четыре строки.
